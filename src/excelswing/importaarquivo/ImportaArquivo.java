/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package excelswing.importaarquivo;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Ronaldo Mendes
 */
public class ImportaArquivo extends javax.swing.JFrame {

    /**
     * Creates new form ImportaArquivo
     */
    public ImportaArquivo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNomeArquivo = new javax.swing.JTextField();
        btnImpArquivo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtNomeArquivo.setBackground(new java.awt.Color(240, 240, 240));
        txtNomeArquivo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtNomeArquivo.setEnabled(false);

        btnImpArquivo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnImpArquivo.setText("Importar");
        btnImpArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImpArquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(txtNomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnImpArquivo)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImpArquivo))
                .addContainerGap(165, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnImpArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImpArquivoActionPerformed
//        permite a criação de um filtro personalizado para selecionar arquivos específicos
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos Excel (*.xls, *.xlsx, *.xlsb)", "xls", "xlsx", "xlsb");
//        cria a caixa de diálogo
        JFileChooser fileChooser = new JFileChooser();
//        cria o título da caixa de diálogo
        fileChooser.setDialogTitle("Importar planilha");
//        remove todos os filtros de tipos de arquivo disponíveis
        fileChooser.removeChoosableFileFilter(fileChooser.getFileFilter());
//        modo de seleção de arquivos
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
//        adiciona apenas o filtro customizado
        fileChooser.setFileFilter(filter);
//        ativa a visualização da caixa de diálogo
        int retorno = fileChooser.showOpenDialog(this);
        
//        se confirmar a seleção do arquivo, adiciona o caminho, senão deixa em branco
        if (retorno == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            txtNomeArquivo.setText(file.getPath());
        } else {
            txtNomeArquivo.setText(null);
        }
    }//GEN-LAST:event_btnImpArquivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportaArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportaArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportaArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportaArquivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ImportaArquivo().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImpArquivo;
    private javax.swing.JTextField txtNomeArquivo;
    // End of variables declaration//GEN-END:variables
}
